// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kindred.Rewards.Rewards.FunctionalTests.Features.Uniboost.Entitlement
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GetEntitlements")]
    public partial class GetEntitlementsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "GetEntitlements.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Uniboost/Entitlement", "GetEntitlements", "[GET] /claims/entitlements/{customerId}", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "comments"});
            table326.AddRow(new string[] {
                        "uniboost_bonus_user",
                        "uniboost_bonus_user"});
            table326.AddRow(new string[] {
                        "uniboost_promo_user",
                        "uniboost_promo_user"});
            table326.AddRow(new string[] {
                        "new_user",
                        "new user template"});
            table326.AddRow(new string[] {
                        "vip_user",
                        "vip new template"});
#line 6
    testRunner.Given("I have promotions templates in the system", ((string)(null)), table326, "Given ");
#line hidden
#line 12
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GetEntitlement request returns all rewards linked to customer")]
        public void GetEntitlementRequestReturnsAllRewardsLinkedToCustomer()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GetEntitlement request returns all rewards linked to customer", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 14
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "rewardType",
                            "oddsLadderOffset",
                            "customer_id"});
                table327.AddRow(new string[] {
                            "uniboost_bonus_1",
                            "uniboost",
                            "3",
                            "918791"});
                table327.AddRow(new string[] {
                            "uniboost_bonus_2",
                            "uniboost",
                            "3",
                            "918791"});
                table327.AddRow(new string[] {
                            "uniboost_bonus_3",
                            "uniboost",
                            "3",
                            "918791"});
                table327.AddRow(new string[] {
                            "uniboost_bonus_4",
                            "uniboost",
                            "3",
                            "918791"});
                table327.AddRow(new string[] {
                            "uniboost_bonus_5",
                            "uniboost",
                            "3",
                            "918791"});
#line 15
    testRunner.Given("I have bonuses in the system", ((string)(null)), table327, "Given ");
#line hidden
#line 22
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table328.AddRow(new string[] {
                            "918791",
                            "uniboost_bonus_user"});
#line 23
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table328, "When ");
#line hidden
#line 26
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table329.AddRow(new string[] {
                            "uniboost_bonus_1,uniboost_bonus_2,uniboost_bonus_3,uniboost_bonus_4,uniboost_bonu" +
                                "s_5",
                            ""});
#line 27
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table329, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("GetEntitlement request returns all rewards linked to template")]
        public void GetEntitlementRequestReturnsAllRewardsLinkedToTemplate()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("GetEntitlement request returns all rewards linked to template", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 31
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "rewardType",
                            "oddsLadderOffset"});
                table330.AddRow(new string[] {
                            "uniboost_promo_1",
                            "uniboost",
                            "3"});
                table330.AddRow(new string[] {
                            "uniboost_promo_2",
                            "uniboost",
                            "3"});
                table330.AddRow(new string[] {
                            "uniboost_promo_3",
                            "uniboost",
                            "3"});
                table330.AddRow(new string[] {
                            "uniboost_promo_4",
                            "uniboost",
                            "3"});
                table330.AddRow(new string[] {
                            "uniboost_promo_5",
                            "uniboost",
                            "3"});
#line 32
    testRunner.Given("I have promotions in the system", ((string)(null)), table330, "Given ");
#line hidden
#line 39
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table331.AddRow(new string[] {
                            "uniboost_promo_user",
                            "uniboost_promo_1,uniboost_promo_2,uniboost_promo_3,uniboost_promo_4,uniboost_prom" +
                                "o_5"});
#line 40
    testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table331, "When ");
#line hidden
#line 43
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table332.AddRow(new string[] {
                            "918791",
                            "uniboost_promo_user"});
#line 44
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table332, "When ");
#line hidden
#line 47
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table333.AddRow(new string[] {
                            "uniboost_promo_1,uniboost_promo_2,uniboost_promo_3,uniboost_promo_4,uniboost_prom" +
                                "o_5",
                            ""});
#line 48
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table333, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get entitlements should not return cancelled promotions")]
        public void GetEntitlementsShouldNotReturnCancelledPromotions()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get entitlements should not return cancelled promotions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 53
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name"});
                table334.AddRow(new string[] {
                            "918737",
                            "123"});
#line 54
 testRunner.When("I create Bonus for following criteria:", ((string)(null)), table334, "When ");
#line hidden
#line 57
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table335.AddRow(new string[] {
                            "new_uniboost",
                            "1"});
#line 58
 testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table335, "When ");
#line hidden
#line 61
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table336.AddRow(new string[] {
                            "new_user",
                            "new_uniboost"});
#line 62
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table336, "When ");
#line hidden
#line 65
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table337.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 66
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table337, "When ");
#line hidden
#line 69
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table338.AddRow(new string[] {
                            "new_uniboost",
                            "123"});
#line 70
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table338, "And ");
#line hidden
#line 73
 testRunner.When("I submit CancelPromotion request for \'new_uniboost\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.And("the cache for template key \'new_user\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table339.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 76
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table339, "When ");
#line hidden
#line 79
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 80
 testRunner.And("GetEntitlement response should not include promotion \'new_uniboost\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get entitlements should return updated promotions")]
        public void GetEntitlementsShouldReturnUpdatedPromotions()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get entitlements should return updated promotions", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name"});
                table340.AddRow(new string[] {
                            "918737",
                            "123"});
#line 83
 testRunner.When("I create Bonus for following criteria:", ((string)(null)), table340, "When ");
#line hidden
#line 86
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table341.AddRow(new string[] {
                            "new_uniboost",
                            "1"});
#line 87
 testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table341, "When ");
#line hidden
#line 90
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table342.AddRow(new string[] {
                            "new_user",
                            "new_uniboost"});
#line 91
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table342, "When ");
#line hidden
#line 94
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table343.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 95
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table343, "When ");
#line hidden
#line 98
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table344.AddRow(new string[] {
                            "new_uniboost",
                            "123"});
#line 99
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table344, "And ");
#line hidden
#line 102
 testRunner.When("I UpdatePromotion for \'new_uniboost\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("the cache for template key \'new_user\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table345.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 104
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table345, "When ");
#line hidden
#line 107
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table346.AddRow(new string[] {
                            "new_uniboost",
                            "123"});
#line 108
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table346, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get entitlements - with proper next refresh interval")]
        public void GetEntitlements_WithProperNextRefreshInterval()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get entitlements - with proper next refresh interval", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit",
                            "claim_interval"});
                table347.AddRow(new string[] {
                            "new_uniboost_NextInterval",
                            "1",
                            "0 0 0 ? * * *"});
#line 113
 testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table347, "When ");
#line hidden
#line 116
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table348.AddRow(new string[] {
                            "new_user",
                            "new_uniboost_NextInterval"});
#line 117
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table348, "When ");
#line hidden
#line 120
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table349.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 121
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table349, "When ");
#line hidden
#line 124
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name"});
                table350.AddRow(new string[] {
                            "new_uniboost_NextInterval"});
#line 125
 testRunner.And("Rewards should have nextInterval field:", ((string)(null)), table350, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get entitlements should return new promotions mapped to a template")]
        public void GetEntitlementsShouldReturnNewPromotionsMappedToATemplate()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get entitlements should return new promotions mapped to a template", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 129
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name"});
                table351.AddRow(new string[] {
                            "918737",
                            "123"});
#line 130
 testRunner.When("I create Bonus for following criteria:", ((string)(null)), table351, "When ");
#line hidden
#line 133
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table352.AddRow(new string[] {
                            "new_uniboost",
                            "1"});
                table352.AddRow(new string[] {
                            "new_happy_hour",
                            "1"});
#line 134
 testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table352, "When ");
#line hidden
#line 138
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table353.AddRow(new string[] {
                            "new_user",
                            "new_uniboost"});
#line 139
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table353, "When ");
#line hidden
#line 142
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
 testRunner.And("the cache for template key \'new_user\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table354.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 144
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table354, "When ");
#line hidden
#line 147
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table355.AddRow(new string[] {
                            "new_uniboost",
                            "123"});
#line 148
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table355, "And ");
#line hidden
                TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table356.AddRow(new string[] {
                            "new_user",
                            "new_uniboost,new_happy_hour"});
#line 151
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table356, "When ");
#line hidden
#line 154
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 155
 testRunner.And("the cache for template key \'new_user\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table357.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 156
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table357, "When ");
#line hidden
#line 159
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table358.AddRow(new string[] {
                            "new_uniboost,new_happy_hour",
                            "123"});
#line 160
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table358, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get entitlements")]
        public void GetEntitlements()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get entitlements", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 164
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name"});
                table359.AddRow(new string[] {
                            "918737",
                            "123"});
#line 165
 testRunner.When("I create Bonus for following criteria:", ((string)(null)), table359, "When ");
#line hidden
#line 168
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table360.AddRow(new string[] {
                            "vip_uniboost",
                            "1"});
                table360.AddRow(new string[] {
                            "new_uniboost",
                            "1"});
#line 169
 testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table360, "When ");
#line hidden
#line 173
 testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table361.AddRow(new string[] {
                            "vip_user",
                            "vip_uniboost"});
                table361.AddRow(new string[] {
                            "new_user",
                            "new_uniboost"});
#line 174
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table361, "When ");
#line hidden
#line 178
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table362.AddRow(new string[] {
                            "918737",
                            "new_user"});
#line 179
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table362, "When ");
#line hidden
#line 182
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table363.AddRow(new string[] {
                            "new_uniboost",
                            "123"});
#line 183
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table363, "And ");
#line hidden
                TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table364.AddRow(new string[] {
                            "918737",
                            "new_user,vip_user"});
#line 186
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table364, "When ");
#line hidden
#line 189
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table365.AddRow(new string[] {
                            "new_uniboost,vip_uniboost",
                            "123"});
#line 190
 testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table365, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Disabling a Promo template means entitlements for that template will not be retur" +
            "ned")]
        public void DisablingAPromoTemplateMeansEntitlementsForThatTemplateWillNotBeReturned()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Disabling a Promo template means entitlements for that template will not be retur" +
                    "ned", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 194
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "rewardType"});
                table366.AddRow(new string[] {
                            "oddsb1",
                            "uniboost"});
#line 195
 testRunner.Given("I have promotions in the system", ((string)(null)), table366, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table367.AddRow(new string[] {
                            "vip_user",
                            "oddsb1"});
#line 198
 testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table367, "When ");
#line hidden
#line 201
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table368.AddRow(new string[] {
                            "918737",
                            "vip_user"});
#line 202
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table368, "When ");
#line hidden
#line 205
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                            "name",
                            "remainingClaimsPerInterval"});
                table369.AddRow(new string[] {
                            "oddsb1",
                            "1"});
#line 206
    testRunner.And("the entitlements for customer \'918737\' should contain:", ((string)(null)), table369, "And ");
#line hidden
#line 209
 testRunner.When("I submit Delete request for template key \'vip_user\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 210
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 211
 testRunner.And("the cache for template key \'vip_user\' is deleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table370.AddRow(new string[] {
                            "918737",
                            "vip_user"});
#line 212
 testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table370, "When ");
#line hidden
#line 215
 testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 216
 testRunner.And("GetEntitlement response should not include promotion \'oddsb1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
