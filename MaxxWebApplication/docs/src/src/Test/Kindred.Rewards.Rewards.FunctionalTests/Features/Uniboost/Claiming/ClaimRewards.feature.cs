// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kindred.Rewards.Rewards.FunctionalTests.Features.Uniboost.Claiming
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ClaimReward")]
    public partial class ClaimRewardFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "ClaimRewards.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Uniboost/Claiming", "ClaimReward", "[POST] /claims/batchclaim", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "key",
                        "comments"});
            table271.AddRow(new string[] {
                        "new_user",
                        "new user template"});
            table271.AddRow(new string[] {
                        "vip_user",
                        "vip new template"});
#line 6
    testRunner.Given("I have promotions templates in the system", ((string)(null)), table271, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Claim entitlements")]
        [NUnit.Framework.CategoryAttribute("claim")]
        public void ClaimEntitlements()
        {
            string[] tagsOfScenario = new string[] {
                    "claim"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claim entitlements", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name"});
                table272.AddRow(new string[] {
                            "918737",
                            "123"});
#line 13
    testRunner.When("I create Bonus for following criteria:", ((string)(null)), table272, "When ");
#line hidden
#line 16
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table273.AddRow(new string[] {
                            "vip_uniboost",
                            "1"});
#line 17
    testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table273, "When ");
#line hidden
#line 20
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table274.AddRow(new string[] {
                            "vip_user",
                            "vip_uniboost"});
#line 21
    testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table274, "When ");
#line hidden
#line 24
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table275.AddRow(new string[] {
                            "918737",
                            "vip_user"});
#line 25
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table275, "When ");
#line hidden
#line 28
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name",
                            "customer_id"});
                table276.AddRow(new string[] {
                            "vip_uniboost",
                            "123",
                            "918737"});
#line 29
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table276, "And ");
#line hidden
                TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "number_of_claims",
                            "contestKey"});
                table277.AddRow(new string[] {
                            "918737",
                            "vip_uniboost",
                            "1",
                            "default"});
                table277.AddRow(new string[] {
                            "918737",
                            "123",
                            "1",
                            "default"});
#line 32
    testRunner.When("I submit ClaimEntitlement request for following criteria:", ((string)(null)), table277, "When ");
#line hidden
#line 36
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name",
                            "customer_id"});
                table278.AddRow(new string[] {
                            "vip_uniboost",
                            "123",
                            "918737"});
#line 37
    testRunner.And("ClaimEntitlement response should claim following rewards:", ((string)(null)), table278, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Claim entitlements - outcome is not allowed")]
        [NUnit.Framework.CategoryAttribute("claim")]
        public void ClaimEntitlements_OutcomeIsNotAllowed()
        {
            string[] tagsOfScenario = new string[] {
                    "claim"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claim entitlements - outcome is not allowed", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 42
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "filterOutcome"});
                table279.AddRow(new string[] {
                            "918737",
                            "123",
                            "plain:draw"});
#line 43
    testRunner.When("I create Bonus for following criteria:", ((string)(null)), table279, "When ");
#line hidden
#line 46
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table280.AddRow(new string[] {
                            "vip_uniboost",
                            "1"});
#line 47
    testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table280, "When ");
#line hidden
#line 50
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table281.AddRow(new string[] {
                            "vip_user",
                            "vip_uniboost"});
#line 51
    testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table281, "When ");
#line hidden
#line 54
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table282.AddRow(new string[] {
                            "918737",
                            "vip_user"});
#line 55
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table282, "When ");
#line hidden
#line 58
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name",
                            "customer_id"});
                table283.AddRow(new string[] {
                            "vip_uniboost",
                            "123",
                            "918737"});
#line 59
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table283, "And ");
#line hidden
                TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "number_of_claims",
                            "outcome",
                            "contestKey"});
                table284.AddRow(new string[] {
                            "918737",
                            "vip_uniboost",
                            "1",
                            "ksp:outcome.1:[football:202304210500:shandong_luneng_srl_vs_nantong_zhiyun_srl]:h" +
                                "ighest_scoring_half:plain:equal",
                            "default"});
                table284.AddRow(new string[] {
                            "918737",
                            "123",
                            "1",
                            "ksp:outcome.1:[football:202304210500:shandong_luneng_srl_vs_nantong_zhiyun_srl]:h" +
                                "ighest_scoring_half:plain:equal",
                            "default"});
#line 62
    testRunner.When("I submit ClaimEntitlement request for following criteria:", ((string)(null)), table284, "When ");
#line hidden
#line 66
    testRunner.Then("the HttpStatusCode should be 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Claim entitlements - outcome is allowed")]
        [NUnit.Framework.CategoryAttribute("claim")]
        public void ClaimEntitlements_OutcomeIsAllowed()
        {
            string[] tagsOfScenario = new string[] {
                    "claim"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claim entitlements - outcome is allowed", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 69
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "filterOutcome"});
                table285.AddRow(new string[] {
                            "918737",
                            "123",
                            "plain:draw"});
#line 70
    testRunner.When("I create Bonus for following criteria:", ((string)(null)), table285, "When ");
#line hidden
#line 73
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit"});
                table286.AddRow(new string[] {
                            "vip_uniboost",
                            "1"});
#line 74
    testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table286, "When ");
#line hidden
#line 77
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table287.AddRow(new string[] {
                            "vip_user",
                            "vip_uniboost"});
#line 78
    testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table287, "When ");
#line hidden
#line 81
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table288.AddRow(new string[] {
                            "918737",
                            "vip_user"});
#line 82
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table288, "When ");
#line hidden
#line 85
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name",
                            "customer_id"});
                table289.AddRow(new string[] {
                            "vip_uniboost",
                            "123",
                            "918737"});
#line 86
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table289, "And ");
#line hidden
                TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "number_of_claims",
                            "outcome",
                            "contestKey"});
                table290.AddRow(new string[] {
                            "918737",
                            "vip_uniboost",
                            "1",
                            "ksp:outcome.1:[football:202304210500:shandong_luneng_srl_vs_nantong_zhiyun_srl]:h" +
                                "ighest_scoring_half:plain:draw",
                            "default"});
                table290.AddRow(new string[] {
                            "918737",
                            "123",
                            "1",
                            "ksp:outcome.1:[football:202304210500:shandong_luneng_srl_vs_nantong_zhiyun_srl]:h" +
                                "ighest_scoring_half:plain:draw",
                            "default"});
#line 89
    testRunner.When("I submit ClaimEntitlement request for following criteria:", ((string)(null)), table290, "When ");
#line hidden
#line 93
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name",
                            "customer_id"});
                table291.AddRow(new string[] {
                            "vip_uniboost",
                            "123",
                            "918737"});
#line 94
    testRunner.And("ClaimEntitlement response should claim following rewards:", ((string)(null)), table291, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Claim entitlements with given reward terms")]
        [NUnit.Framework.CategoryAttribute("claim")]
        public void ClaimEntitlementsWithGivenRewardTerms()
        {
            string[] tagsOfScenario = new string[] {
                    "claim"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claim entitlements with given reward terms", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 99
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "claim_limit",
                            "claim_interval"});
                table292.AddRow(new string[] {
                            "vip_uniboost",
                            "2",
                            "0/30 * * ? * * *"});
#line 100
    testRunner.When("I submit CreatePromotion request for following promotions:", ((string)(null)), table292, "When ");
#line hidden
#line 103
    testRunner.Then("the HttpStatusCode should be 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                            "template_key",
                            "promotions"});
                table293.AddRow(new string[] {
                            "vip_user",
                            "vip_uniboost"});
#line 104
    testRunner.When("I submit CreateMapping request for following promotions:", ((string)(null)), table293, "When ");
#line hidden
#line 107
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table294.AddRow(new string[] {
                            "918738",
                            "vip_user"});
#line 108
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table294, "When ");
#line hidden
#line 111
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table295.AddRow(new string[] {
                            "vip_uniboost",
                            ""});
#line 112
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table295, "And ");
#line hidden
                TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "name",
                            "number_of_claims",
                            "contestKey"});
                table296.AddRow(new string[] {
                            "918738",
                            "vip_uniboost",
                            "2",
                            "default"});
#line 115
    testRunner.When("I submit ClaimEntitlement request for following criteria:", ((string)(null)), table296, "When ");
#line hidden
#line 118
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys"});
                table297.AddRow(new string[] {
                            "918738",
                            "vip_user"});
#line 119
    testRunner.When("I submit GetEntitlement request for following criteria:", ((string)(null)), table297, "When ");
#line hidden
#line 122
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
    testRunner.And("GetEntitlement response should not include promotion \'vip_uniboost\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                            "customer_id",
                            "template_keys",
                            "claim_interval"});
                table298.AddRow(new string[] {
                            "918738",
                            "vip_user",
                            "0/30 * * ? * * *"});
#line 124
    testRunner.When("I submit GetEntitlement request after the next interval for following criteria:", ((string)(null)), table298, "When ");
#line hidden
#line 127
    testRunner.Then("the HttpStatusCode should be 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                            "promotion_name",
                            "bonus_name"});
                table299.AddRow(new string[] {
                            "vip_uniboost",
                            ""});
#line 128
    testRunner.And("GetEntitlement response should include following rewards:", ((string)(null)), table299, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
